# Generated by Django 5.1.5 on 2025-05-25 12:44

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Filiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('type', models.CharField(choices=[('cycle', 'Cycle'), ('specialisation', 'Spécialisation')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Utilisateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('prenom', models.CharField(max_length=50)),
                ('nom', models.CharField(max_length=50)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='photos/')),
                ('niveau', models.CharField(choices=[('1', '1ère année'), ('2', '2ème année'), ('3', '3ème année'), ('4', '4ème année'), ('5', '5ème année')], max_length=1)),
                ('actif', models.BooleanField(default=True)),
                ('administrateur', models.BooleanField(default=False)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('derniere_connexion', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('filiere', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.filiere')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DemandeMatching',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creneau_prefere', models.DateTimeField()),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('traite', 'Traité')], max_length=20)),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('session', 'Session'), ('message', 'Message'), ('fichier', 'Fichier')], max_length=20)),
                ('contenu', models.TextField()),
                ('lue', models.BooleanField(default=False)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SessionTravail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, max_length=500)),
                ('lieu', models.CharField(blank=True, max_length=200)),
                ('en_ligne', models.BooleanField(default=False)),
                ('lien_en_ligne', models.URLField(blank=True)),
                ('salle', models.CharField(blank=True, max_length=100)),
                ('date_heure', models.DateTimeField()),
                ('max_participants', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(2), django.core.validators.MaxValueValidator(20)])),
                ('confidentialite', models.CharField(choices=[('public', 'Public'), ('prive', 'Privé')], max_length=20)),
                ('code_acces', models.CharField(blank=True, max_length=6)),
                ('statut', models.CharField(choices=[('planifiee', 'Planifiée'), ('en_cours', 'En cours'), ('terminee', 'Terminée'), ('annulee', 'Annulée')], max_length=20)),
                ('cree_le', models.DateTimeField(auto_now_add=True)),
                ('modifie_le', models.DateTimeField(auto_now=True)),
                ('createur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions_creees', to=settings.AUTH_USER_MODEL)),
                ('matiere', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.matiere')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contenu', models.TextField()),
                ('piece_jointe', models.FileField(blank=True, null=True, upload_to='pieces_jointes/')),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('prive', models.BooleanField(default=False)),
                ('destinataire', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages_recus', to=settings.AUTH_USER_MODEL)),
                ('expediteur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages_envoyes', to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sessiontravail')),
            ],
        ),
        migrations.CreateModel(
            name='Fichier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fichier', models.FileField(upload_to='fichiers/')),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('taille', models.PositiveIntegerField()),
                ('type', models.CharField(max_length=50)),
                ('uploadeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sessiontravail')),
            ],
        ),
        migrations.CreateModel(
            name='EvenementCalendrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_evenement', models.CharField(choices=[('session', 'Session'), ('personnel', 'Personnel')], max_length=20)),
                ('debut', models.DateTimeField()),
                ('fin', models.DateTimeField()),
                ('synchronise_avec', models.CharField(blank=True, max_length=100)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.sessiontravail')),
            ],
        ),
        migrations.CreateModel(
            name='Signalement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('motif', models.TextField()),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('traite', 'Traité')], max_length=20)),
                ('date_signalement', models.DateTimeField(auto_now_add=True)),
                ('date_traitement', models.DateTimeField(blank=True, null=True)),
                ('message_cible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.message')),
                ('session_cible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.sessiontravail')),
                ('signale_par', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='signalements_faits', to=settings.AUTH_USER_MODEL)),
                ('traite_par', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='signalements_traites', to=settings.AUTH_USER_MODEL)),
                ('utilisateur_cible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signalements_recus', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MatiereSuivie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matiere', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.matiere')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('utilisateur', 'matiere')},
            },
        ),
        migrations.CreateModel(
            name='ParticipantSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('approuve', models.BooleanField(default=False)),
                ('date_rejoindre', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sessiontravail')),
            ],
            options={
                'unique_together': {('session', 'utilisateur')},
            },
        ),
    ]
